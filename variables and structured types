
GEO = 'ic86'
C=0.299792458                                                                  
N=1.3195
V=C/N
QST0_THRES = 2000 # PE, cut on max string charge
QST1_THRES = 10 # PE, cut on max string charge
QST2_THRES = 10 # PE, cut on max string charge
QTOT_THRES = 1000 #PE, cut on total charge
LLH_THRES = -0.1 #LLh diffrence between spe and cascade reco
DIST_ST_CUT = 150**2 #m, look at string within this distance of the max string

#image size
N_Y_BINS = 60
N_X_BINS = 500
N_CHANNELS = 3 #number of strings to make image from

#for image bug fix, where early niose hits can shift the image frame away
#from the event sometimes <1% cases
#How many simultaneous noise hits can happen too early in the event?
#hardly more than 3
N_NOISE_HITS = 3 
#How big of a shift we need to worry about?
#can't be too small or you would be shifting normal waveforms
#out of the image for no reason
MAX_TIME_SHIFT = 700 #ns or ~half an image 

DEFAULT_INDEX = 2.88
DEFAULT_PHI = 2.1467

 
    veto_cas_rlogl = 999
    veto_spe_rlogl = -999
    veto_cas_rlogl_ndc = 999
    veto_spe_rlogl_ndc = -999
    veto_fh_z = -999
    veto_svv_z = -999
    veto_ldp = -999


#not sure if this needs to be reworked or not
st_info_dtype = np.dtype(
    [                                                                                       
        ('q', np.float32),
        ('num', np.uint32),
        ('dist', np.float32)
    ]
)

id_dtype = np.dtype(
    [
        ("run_id", np.uint32),
        ("sub_run_id", np.uint32),
        ("event_id", np.uint32),
        ("sub_event_id", np.uint32),
    ]
)

particle_dtype = np.dtype(
    [
        ("tree_id", np.uint32,(2)),
        ("pdg", np.int32),
        ("energy", np.float32),
        ("position", np.float32,(3)),
        ("direction", np.float32,(2)),
        ("time", np.float32),
        ("length", np.float32)
    ]
)

veto_dtype = np.dtype(                                             
    [                                                                             
        ("SPE_rlogl", np.float32),                                                      
        ("Cascade_rlogl", np.float32),
        ("SPE_rlogl_noDC", np.float32),                                                   
        ("Cascade_rlogl_noDC", np.float32),                                              
        ("FirstHitZ", np.float32),
        ("VHESelfVetoVertexPosZ", np.float32),                                             
        ("LeastDistanceToPolygon_Veto", np.float32)
       
    ]
)

hese_dtype = np.dtype(                                             
    [                                                                             
        ("vheselfveto", np.bool_),
        ("vheselfvetovertexpos", np.float32,(3)),
        ("vheselfvetovertextime", np.float32),
    ]
)
